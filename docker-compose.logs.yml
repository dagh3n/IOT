services:
  ### LOGS
  loki:
    image: grafana/loki:3.0.0                       # Specifies the Loki Docker image and version.
    container_name: loki                            # Names the container for easier management.
    volumes:
      - ./logs/loki/loki-config.yaml:/mnt/config/loki-config.yaml # Mounts the Loki configuration file.
    ports:
      - "3100:3100"                                 # Maps port 3100 on the host to port 3100 in the container.
    command: -config.file=/mnt/config/loki-config.yaml # Runs Loki with the specified configuration file.
    networks:
      - tjp-net

  promtail:
    image: grafana/promtail:3.0.0                   # Specifies the Promtail Docker image and version.
    container_name: promtail                        # Names the container for easier management.
    volumes:
      - ./logs/promtail/promtail-config.yaml:/mnt/config/promtail-config.yaml
      - ./logs/chart_service:/var/log/chart_service
      - ./logs/gemini:/var/log/gemini
      - ./logs/image_recognition:/var/log/image_recognition
      - ./logs/recommendation_service:/var/log/recommendation_service
      - ./logs/thingspeak_adaptor:/var/log/thingspeak_adaptor
      - ./logs/vase_control:/var/log/vase_control
      - ./logs/resource_catalog:/var/log/resource_catalog
      - ./logs/service_catalog:/var/log/service_catalog
      - ./logs/telegram_bot:/var/log/telegram_bot
    depends_on:
      - loki                                       # Ensures Promtail starts after Loki.
    command: -config.file=/mnt/config/promtail-config.yaml # Runs Promtail with the specified configuration file.
    networks:
      - tjp-net

  grafana:
      image: grafana/grafana
      container_name: grafana
      restart: unless-stopped
      ports:
      - '3000:3000'
      user: "1000"
      volumes:
        - ./logs/grafana:/var/lib/grafana
      networks:
          - tjp-net

  prometheus:
      image: prom/prometheus:latest
      volumes:
        - ./logs/prometheus:/etc/prometheus
      ports:
        - "9095:9090"
      restart: unless-stopped
      command:
        - --config.file=/etc/prometheus/prometheus-config.yml
        - --storage.tsdb.path=/prometheus
      networks:
        - tjp-net
  ### PORTAINER
  portainer:
      image: portainer/portainer-ce:latest
      container_name: portainer
      restart: on-failure
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock  # Access to Docker engine
        - portainer_data:/data  # Persistent data storage for Portainer
      ports:
        - "9000:9000"  # Access Portainer UI on this port
      environment:
        - TZ=Europe/Paris  # Set timezone (optional)


volumes:
  portainer_data:
    driver: local

networks:
  tjp-net:
    driver: bridge
